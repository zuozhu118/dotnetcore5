// <auto-generated />
using ManyToMany;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManyToMany.Migrations
{
    [DbContext(typeof(DataBase))]
    partial class DataBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManyToMany.Student", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("sname")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("t_student");
                });

            modelBuilder.Entity("ManyToMany.Teacher", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tname")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("t_teacher");
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.Property<long>("_studentid")
                        .HasColumnType("bigint");

                    b.Property<long>("_teacherid")
                        .HasColumnType("bigint");

                    b.HasKey("_studentid", "_teacherid");

                    b.HasIndex("_teacherid");

                    b.ToTable("t_teacher_student");
                });

            modelBuilder.Entity("StudentTeacher", b =>
                {
                    b.HasOne("ManyToMany.Student", null)
                        .WithMany()
                        .HasForeignKey("_studentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManyToMany.Teacher", null)
                        .WithMany()
                        .HasForeignKey("_teacherid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
